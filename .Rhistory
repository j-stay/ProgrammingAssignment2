data1<-read.table("specdata/003.csv")
directory<-c("specdata")
directory
id<-1:30
id
as.character(id)
directory+as.character(id)
data1<-read.table("specdata/003.csv","specdata/004.csv")
data1<-read.table(c("specdata/003.csv","specdata/004.csv"))
sprintf("%03d",1)
sprintf("%03d",25)
sprintf("%03d",999)
sprintf("%03d",9999)
print(filename)
}
pollutantmean <- function(directory = "specdata", pollutant, id = 1:332) {
a
a
pollutantmean <- function(directory = "specdata", pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (num in id){
filename<-paste(directory,"/",printf("%03d",num),".csv")
print(filename)
}
}
pollutantmean
pollutantmean(directory="specdata")
pollutantmean <- function(directory = "specdata", pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (num in id){
filename<-paste(directory,"/",sprintf("%03d",num),".csv")
print(filename)
}
}
pollutantmean(directory="specdata")
pollutantmean <- function(directory = "specdata", pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (num in id){
filename<-paste(directory,"/",sprintf("%03d",num),".csv",sep="")
print(filename)
}
}
pollutantmean(directory="specdata")
source('~/Coursera/rprog-007/assignment1/pollutantmean.R')
pollutantmean(directory="specdata")
mean
args(mean)
help mean
mean help
help
help(mean)
source('~/Coursera/rprog-007/assignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate")
source('~/Coursera/rprog-007/assignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate")
source('~/Coursera/rprog-007/assignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate")
source('~/Coursera/rprog-007/assignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate")
x
source('~/Coursera/rprog-007/assignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate")
source('~/Coursera/rprog-007/assignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate")
x[["sulfate"]]
y<-pollutantmean("specdata", "sulfate")
y[["sulfate"]]
y[1]
y
names(y)
y[[v2]]
y[["v2"]]
y[,3]
y[[2]]
y[[2,"sulfate"]
]
y[[2]]["sulfate"]
y<-pollutantmean("specdata", "sulfate", id = 1:2)
y
names(y)
y[[v2]]
y["v2"]
y[,2]
help(read.table)
source('~/Coursera/rprog-007/assignment1/pollutantmean.R')
y<-pollutantmean("specdata", "sulfate", id = 1:2)
y
y[["sulfate"]]
source('~/Coursera/rprog-007/assignment1/pollutantmean.R')
help(numeric)
source('~/Coursera/rprog-007/assignment1/pollutantmean.R')
test<-c()
test
n<-numeric()
n
n<-append(n,1)
n
source('~/Coursera/rprog-007/assignment1/pollutantmean.R')
y<-pollutantmean("specdata", "sulfate", id = 1:2)
y<-pollutantmean("specdata", "sulfate", id = 1)
y<-pollutantmean("specdata", "sulfate")
source('~/Coursera/rprog-007/assignment1/pollutantmean.R')
y<-pollutantmean("specdata", "sulfate")
pollutantmean("specdata", "sulfate")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", 1:10)
pollutantmean("specdata", "nitrate",1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source('~/Coursera/rprog-007/assignment1/pollutantmean.R')
pollutantmean("specdata", "nitrate", 23)
source('~/Coursera/rprog-007/assignment1/pollutantmean.R')
source('~/Coursera/rprog-007/assignment1/pollutantmean.R')
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source('~/Coursera/rprog-007/assignment1/complete.R')
complete("specdata")
help(complete.cases)
source('~/Coursera/rprog-007/assignment1/complete.R')
complete("specdata")
complete("specdata")
source('~/Coursera/rprog-007/assignment1/complete.R')
complete("specdata")
source('~/Coursera/rprog-007/assignment1/complete.R')
complete("specdata")
source('~/Coursera/rprog-007/assignment1/complete.R')
complete("specdata")
source('~/Coursera/rprog-007/assignment1/complete.R')
help(data.frame)
df<-data.frame
df
help(rbind)
df<-data.frame()
df
source('~/Coursera/rprog-007/assignment1/complete.R')
complete("specdata")
source('~/Coursera/rprog-007/assignment1/complete.R')
complete("specdata")
source('~/Coursera/rprog-007/assignment1/complete.R')
complete("specdata")
help(setnames)
df<-data.frame()
names(df)<-c("id","nobs")
cbind(df, 1, "nnnn", c("id","nobs"))
df
cbind(df, 1, "nnnn")
df<-data.frame(,2)
df
df<-data.frame(0,2)
df
names(df)<-c("id","nobs")
df
rbind(df,c(3,4))
df
rm(df)
df
df<-data.frame()
df
df<-rbind(df,c("id"=1, "nobs"=2))
df
rm(df)
df
df<-data.frame()
df<-rbind(df,c(1,2),c("id","nobs"))
df
df<-data.frame()
df
colnames(df)<-c("id","nobs")
source('~/Coursera/rprog-007/assignment1/complete.R')
source('~/Coursera/rprog-007/assignment1/complete.R')
complete("specdata")
source('~/Coursera/rprog-007/assignment1/complete.R')
complete("specdata")
source('~/Coursera/rprog-007/assignment1/complete.R')
complete("specdata")
source('~/Coursera/rprog-007/assignment1/complete.R')
source('~/Coursera/rprog-007/assignment1/complete.R')
complete("specdata")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
source('~/Coursera/rprog-007/assignment1/complete.R')
files <- list.files(path=directory, pattern="*.csv", full.names=TRUE, recursive=FALSE)
files <- list.files(path="specdata", pattern="*.csv", full.names=TRUE, recursive=FALSE)
files
help(cor)
corr("specdata")
source('~/Coursera/rprog-007/assignment1/corr.R')
corr("specdata")
x
source('~/Coursera/rprog-007/assignment1/corr.R')
corr("specdata")
source('~/Coursera/rprog-007/assignment1/corr.R')
corr("specdata")
help(matrix)
m<-matrix()
m
m<-corr("specdata")
m
m<-rbind(m,corr("specdata"))
m
m[,c("sulfate","nitrate")]
source('~/Coursera/rprog-007/assignment1/corr.R')
source('~/Coursera/rprog-007/assignment1/corr.R')
corr("specdata")
source('~/Coursera/rprog-007/assignment1/corr.R')
corr("specdata")
source('~/Coursera/rprog-007/assignment1/corr.R')
corr("specdata")
source('~/Coursera/rprog-007/assignment1/corr.R')
source('~/Coursera/rprog-007/assignment1/corr.R')
source('~/Coursera/rprog-007/assignment1/corr.R')
corr("specdata")
m
source('~/Coursera/rprog-007/assignment1/corr.R')
corr("specdata")
source('~/Coursera/rprog-007/assignment1/corr.R')
source('~/Coursera/rprog-007/assignment1/corr.R')
corr("specdata")
source('~/Coursera/rprog-007/assignment1/corr.R')
source('~/Coursera/rprog-007/assignment1/corr.R')
corr("specdata")
help(corr)
help(cor)
source('~/Coursera/rprog-007/assignment1/corr.R')
source('~/Coursera/rprog-007/assignment1/corr.R')
corr("specdata")
source('~/Coursera/rprog-007/assignment1/corr.R')
source('~/Coursera/rprog-007/assignment1/corr.R')
corr("specdata")
source('~/Coursera/rprog-007/assignment1/corr.R')
source('~/Coursera/rprog-007/assignment1/corr.R')
corr("specdata")
source('~/Coursera/rprog-007/assignment1/corr.R')
corr("specdata")
source('~/Coursera/rprog-007/assignment1/corr.R')
corr("specdata")
source('~/Coursera/rprog-007/assignment1/corr.R')
corr("specdata")
source('~/Coursera/rprog-007/assignment1/corr.R')
corr("specdata")
source('~/Coursera/rprog-007/assignment1/corr.R')
corr("specdata")
source('~/Coursera/rprog-007/assignment1/corr.R')
corr("specdata")
source('~/Coursera/rprog-007/assignment1/corr.R')
corr("specdata")
source('~/Coursera/rprog-007/assignment1/corr.R')
corr("specdata")
source('~/Coursera/rprog-007/assignment1/corr.R')
source('~/Coursera/rprog-007/assignment1/corr.R')
cr <- corr("specdata", 150)
head(cr)
source('~/Coursera/rprog-007/assignment1/corr.R')
source('~/Coursera/rprog-007/assignment1/corr.R')
cr <- corr("specdata", 150)
head(cr)
source('~/Coursera/rprog-007/assignment1/corr.R')
cr <- corr("specdata", 150)
head(cr)
summary(cr)
source('~/Coursera/rprog-007/assignment1/corr.R')
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
source('~/Coursera/rprog-007/assignment1/corr.R')
source('~/Coursera/rprog-007/assignment1/corr.R')
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
2
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(dataset)
library(datasets)
data(iris)
?iris
iris
apply(iris,iris[["Species"]],mean)
tapply(iris,iris[["Species"]],mean)
iris[["Species"]]
tapply(iris[["Sepal.Length"]],iris[["Species"]],mean)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
rowMeans(iris[, 1:4])
data(mtcars)
?mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
names(mtcars)
tapply(mtcars$hp, mtcars$cyl, mean)
x<-tapply(mtcars$hp, mtcars$cyl, mean)
x[3]-x[1]
debug(ls)
ls
?ls
end
q
?datasets
x
ls
?datasets
q
q
q
q
q
q
q
exit
undebug(ls)
ls
?datasets
library(help="datasets")
setwd("~/ProgrammingAssignment2")
source('~/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(x)
x
x<-makeCacheMatrix()
x
x
x
x<-matrix()
x
makeCacheMatrix(x)
x
x<-makeCacheMatrix(x)
x
x
source('~/ProgrammingAssignment2/cachematrix.R')
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector
v<-makeVector()
v
v<-makeVector(1:20)
v
v$getmean
v$getmean(x)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(makeVector)
makeVector$set(1:20)
x<-1:20
x
makeVector$set(x)
makeVector(x)
makeVector$get
new<-1:20
makeVector$set(new)
makeVector$set<-y
makeVector$set<-new
makeVector[["set"]]
makeVector
makeVector$set
x<-makeVector$set(1:20)
cachemean(new)
cachemean(makeVector)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
simpleVector<-1:25
listedVector<-makeVector(simpleVector)
listedVector
cachedmean(listedVector)
cachemean(listedVector)
cachemean(listedVector)
source('~/ProgrammingAssignment2/cachematrix.R')
source('~/ProgrammingAssignment2/cachematrix.R')
listedMatrix<-matrix(3:10,2:24)
listedMatrix
listedMatrix<-matrix(1:10,20:10)
listedMarix
listedMatrix
listedMatrix<-matrix(1:16,4)
listedMatrix
cacheMatrix<-makeCacheMatrix(listedMatrix)
cacheSolve(cacheMatrix)
solve(listedMatrix)
?solve
?matrix
source('~/ProgrammingAssignment2/cachematrix.R')
simpleMatrix<-matrix(c(2,3,3,4),ncol=2)
simpleMatrix
cacheMatrix<-makeCacheMatrix(simpleMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
source('~/ProgrammingAssignment2/cachematrix.R')
source('~/ProgrammingAssignment2/cachematrix.R')
simpleMatrix<-matrix(c(2,3,3,4),ncol=2)
simpleMatrix
simpleMatrix<-matrix(c(3,6,3,8),ncol=2)
simpleMatrix
cacheMatrix<-makeCacheMatrix(simpleMatrix)
cacheSolve(cacheMatrix)
cacheSolve(cacheMatrix)
set.seed(1)
rpois(5,2)
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
plot(x,y)
